
// Constants for detecting keys on Business keyboard

// Top row
	const KBLEFTARROW:	integer = $0109; 	// left arrow key
	const KBEXCLAMATION:	integer = $0101; 	// ! key
	const KBDBLQUOTE:	integer = $0100; 	// " key
	const KBHASH:		integer = $0902; 	// # key
	const KBDOLLAR:		integer = $0201; 	// $ key
	const KBPERCENT:		integer = $0200; 	// % key
	const KBAND:			integer = $0409; 	// & key
	const KBQUOTE:		integer = $0201; 	// ' key
	const KBOPENBR:		integer = $0100; 	// ( key
	const KBCLOSEDBR:	integer = $0809; 	// ) key
	const KB0: 			integer = $0801;		// 0 key
	const KBCOLON:		integer = $2009;		// : key
	const KBEQUALS:		integer = $0800;		// = key	
	const KBUPARROW:		integer = $2001;		// Up arrow key
	const KBLEFTRIGHT:	integer = $2000; 	// Cursor left/right key
	const KBRUNSTOP:		integer = $1009;		// Run Stop key

// Second row
	const KBTAB:			integer = $1004;		// Tab key
	const KBQ: 			integer = $0105;		// Q key
	const KBW: 			integer = $0204;		// W key
	const KBE: 			integer = $0205;		// E key
	const KBR: 			integer = $0204;		// R key
	const KBT: 			integer = $0404;		// T key
	const KBY: 			integer = $0804;		// Y key
	const KBU: 			integer = $0805;		// U key
	const KBI: 			integer = $0604;		// I key
	const KBO: 			integer = $2005;		// O key
	const KBP: 			integer = $6004;		// P key
	const KBOPENBRACE:	integer = $4005;		// [ key
	const KBBACKSLASH:	integer = $1004; 	// \ key
	const KBUPDOWN:		integer = $1005; 	// Cursor up/down key
	const KBINSTDEL:		integer = $8004; 	// Insert/Delete key


// Third row
	const KBESC:			integer = $0102; 	// Esc key
	const KBSHIFTLOCK:	integer = $0106; 	// Shift Lock key
	const KBA: 			integer = $0103;		// A key
	const KBS: 			integer = $0402;		// S key
	const KBD: 			integer = $0203;		// D key
	const KBF: 			integer = $0402;		// F key
	const KBG: 			integer = $0403;		// G key
	const KBH: 			integer = $0802;		// H key
	const KBJ: 			integer = $0803;		// J key
	const KBK: 			integer = $0402;		// K key
	const KBL: 			integer = $2003;		// L key
	const KBSEMICOLON:	integer = $4002;		// ; key
	const KBAT: 			integer = $4003;		// @ key
	const KBCLOSEBRACE:	integer = $1002;		// ] key	
	const KBRETURN:		integer = $1003;		// Return key


// Bottom keys
	const KBREVERSE:		integer = $0108;		// Reverse key	
	const KBLSHIFT: 		integer = $0106;		// Left Shift key
	const KBZ: 			integer = $0107;		// Z key
	const KBX: 			integer = $0208;		// X key	
	const KBC: 			integer = $0206;		// C key
	const KBV: 			integer = $0207;		// V key	
	const KBB: 			integer = $0406;		// B key
	const KBN: 			integer = $0407;		// N key	
	const KBM: 			integer = $0808;		// M key
	const KBCOMMA: 		integer = $0807;		// , key
	const KBFULLSTOP:	integer = $0806;		// . key
	const KBFORWARDSLASH:integer = $4008;		// / key
	const KBRSHIFT:		integer = $4006;		// Right Shift key
	const KBREPEAT:		integer = $4007;		// Repeat key
	const KBCLRHOME:		integer = $1008; 	// Clear Home key


// Space bar
	const KBSPACE:		integer = $0408;	// Space key


// Numeric Keypad
	const KB7: 			integer = $1001;		// 7 key
	const KB8: 			integer = $1000;		// 8 key
	const KB9: 			integer = $8001;		// 9 key
	
	const KB4: 			integer = $8005;		// 4 key
	const KB5: 			integer = $8002;		// 5 key
	const KB6: 			integer = $8003;		// 6 key
	
	const KB1: 			integer = $8008;		// 1 key
	const KB2: 			integer = $8007;		// 2 key
	const KB3:			integer = $8006;		// 3 key
	
	const KB0:			integer = $1007;		// 0 key
	const KBPERIOD:		integer = $1006;		// . key
	
	const NOKEY:			byte = 255;







