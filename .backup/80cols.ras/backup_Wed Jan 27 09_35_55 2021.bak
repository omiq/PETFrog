program pet_tests;
var  
	eighty:cstring=("80 columns");
	forty:cstring=("40 columns");
	rom_4:cstring=("Rom 4");

// Tests for Rom 4 explicitly
function is_rom_4(): byte;
begin

	// Register check
	if(peek(#$91,0) & $F0 = $E0) then begin 
		is_rom_4:=1; 
	end;
	
	// Alternate test
	if(peek(^50003,0) = 160) then
	begin
		is_rom_4:=1;
	end //4.0 ROMS
	else
	begin
		is_rom_4:=0;
	end; //2.0 ROMS

	is_rom_4:=0;

end;

// Hacky way to check for 80 column screen
function is_80_columns(): byte;
var  
   char: byte; 
	test_string:string=(147,17,43);
	test_location: pointer;
begin
	for char:=0 to 3 do
	begin
		_A:=test_string[char];
	    call(#$FFD2);
	end;

    if(screen_char_loc[80]=43) then
    begin
    		is_80_columns:=1;
    end
    else
    begin
    		is_80_columns:=0;
	end;
end;


begin

	DefineScreen();	
	screen_char_loc:=$8000;
	screenmemory:=$8000;
	
	// Hacky way to check for 80 column screen
    if(is_80_columns()) then
    begin
    		printstring(eighty,0,10);
    end
    else
    begin
    		printstring(forty,0,10);
	end;


	// Tests for Rom 4 explicitly
	if(is_rom_4()) then
	begin
		moveto(10,10,hi(#$8000));
		printstring(#rom_4,0,5);
	end;
	
	loop();

end.
